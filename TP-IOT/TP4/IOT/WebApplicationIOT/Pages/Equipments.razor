@page "/equipments"

@using WebApplicationIOT.Data
@using Models
@inject DataIOTService DataIOTService
@inject EquipmentIOTService EquipmentIOTService

<Layout>
    <LayoutHeader>
        <h1>ESP32 Equipments</h1>
    </LayoutHeader>
    <LayoutContent>


        @if (datas == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <Table>
                <TableHeader>
                    <TableRow>
                        <TableHeaderCell>Id</TableHeaderCell>
                        <TableHeaderCell>Adress IP</TableHeaderCell>
                        <TableHeaderCell>Is online</TableHeaderCell>
                        <TableHeaderCell>Last connection</TableHeaderCell>
                        <TableHeaderCell>View more</TableHeaderCell>
                    </TableRow>
                </TableHeader>
                <TableBody>
                    @foreach (var data in datas)
                    {
                        <TableRow>
                            <TableRowHeader>@data.EquipmentId</TableRowHeader>
                            <TableRowCell>@data.AdressIP</TableRowCell>
                            <TableRowCell>@data.IsOnline</TableRowCell>
                            <TableRowCell>@ConvertTimestampToString(data.LastConnectionTimestamp)</TableRowCell>

                            @{
                                string url = "equipment/" + data.EquipmentId;
                            }

                            <TableRowCell><NavLink href="@url">Details</NavLink></TableRowCell>
                        </TableRow>
                    }
                </TableBody>
            </Table>

        }
    </LayoutContent>
    <LayoutFooter>
        
    </LayoutFooter>
</Layout>






@code {


    private List<EquipmentIOT> datas;


    protected override async Task OnInitializedAsync()
    {
        datas = await EquipmentIOTService.GetAllEquipmentAsync();
    }

    string ConvertTimestampToString(long timestamp)
    {
        return DateTimeOffset.FromUnixTimeSeconds(timestamp).UtcDateTime.ToString();
    }

}
